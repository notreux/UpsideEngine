// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

declare interface table { [key: string | number | symbol]: any; }
declare interface Dictionary<k,v> extends Record<any, any> {}
declare interface ChromaticAberrationConnection {}

declare interface Event {
	Functions: {},
	Threads: {},
}

export type ShadingParams = {
    x: number;
    y: number;
    red: number;
    green: number;
    blue: number;
    opacity: number;
    rotate: (centre: Vector2 | Vector3, position: Vector2 | Vector3, degrees: number) => [number, number];
    texture: (imageLabel: ImageLabel, position: Vector2 | Vector3) => void;
};

declare interface RequestContent {
	ClassName: string,
	Id: string,
	Name: string,
	Instance: {},
	ObjectProperties: {},
}

declare interface Raycast2dResult { 
    Object: PhysicalObject;
    Position: UDim2;
    Distance: Vector2;
    Normal: UDim2 
}

declare interface Raycast2dParams { 
    Filterinterface: string;
    From: Vector2;
    List: Array<BaseObject>;
    To: any 
}

declare interface BaseClass {
    Id: string,
    ClassName: string,
	Name: string,
    SetName(name: string): any;
    IsA(self: BaseClass,className: string): boolean;
    new(...any): BaseClass;
    Clone(...any): BaseClass;
    Extend(self: BaseClass,className: string,classStructure: table): BaseClass;
    Destroy(): any;
}